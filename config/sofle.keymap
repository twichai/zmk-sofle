#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&sk { release-after-ms = <10000>; };

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    dance_F11: dance_F11 {
        compatible = "zmk,behavior-tap-dance";
        label = "DANCE_F11";
        #binding-cells = <0>;
        tapping-term-ms = <1000>;
        bindings = <&kp F1>, <&kp F11>;
    };

    dance_F12: dance_F12 {
        compatible = "zmk,behavior-tap-dance";
        label = "DANCE_F12";
        #binding-cells = <0>;
        tapping-term-ms = <1000>;
        bindings = <&kp F2>, <&kp F12>;
    };

    combos {
        compatible = "zmk,combos";

        system_key {
            bindings = <&mo 1>;
            key-positions = <34 35 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp LEFT_PARENTHESIS  &kp MINUS    &none  &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp RIGHT_BRACKET  &kp GRAVE      &kp GRAVE
&kp DEL    &kp Q            &kp W             &kp E             &kp R                 &kp T        &none  &kp Y      &kp U                  &kp I              &kp O              &kp P          &kp BSLH
&kp ESC    &kp A            &kp S             &kp D             &kp F                 &kp G        &none  &kp H      &kp J                  &kp K              &kp L              &kp SEMI       &kp SQT
&kp LSHFT  &kp Z            &kp X             &kp C             &kp V                 &kp B        &none  &kp N      &kp M                  &kp COMMA          &kp DOT            &kp FSLH       &kp RSHFT
&none      &mo 1            &kp LEFT_ALT      &kp LEFT_CONTROL  &kp BSPC              &kp TAB      &none  &kp ENTER  &kp SPACE              &kp RIGHT_CONTROL  &kp RIGHT_ALT      &kp RIGHT_WIN
            >;

            display-name = "LAYER0";
        };

        number {
            bindings = <
&kp F1  &kp F2          &kp F3      &kp F4         &kp F5        &kp F6           &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans          &trans      &kp LS(CARET)  &kp LS(AMPS)  &trans           &trans  &trans  &kp N7  &kp N8  &kp N9   &trans   &trans
&trans  &kp LS(EXCL)    &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans  &trans  &kp N4  &kp N5  &kp N6   &trans   &trans
&trans  &trans          &trans      &kp EQUAL      &kp LS(STAR)  &trans           &trans  &kp N0  &kp N1  &kp N2  &kp N3   &trans   &trans
&trans  &bt BT_CLR_ALL  &trans      &trans         &trans        &trans           &trans  &trans  &trans  &trans  &trans   &kp DOT
            >;
        };
    };
};
