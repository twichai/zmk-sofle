#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        back_space {
            bindings = <&kp BACKSPACE>;
            key-positions = <36 37>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <49 50>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <40 41>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&none  &none  &none           &none           &none      &none             &none  &none              &none  &none            &none           &none     &none
&none  &kp Q  &kp W           &kp E           &kp R      &kp T             &none  &kp Y              &kp U  &kp I            &kp O           &kp P     &none
&none  &kp A  &mt LEFT_ALT S  &mt LEFT_WIN D  &kp F      &kp G             &none  &kp H              &kp J  &mt RIGHT_WIN K  &mt LEFT_ALT L  &kp SEMI  &none
&none  &kp Z  &kp X           &kp C           &kp V      &kp B             &none  &kp N              &kp M  &kp COMMA        &kp DOT         &kp FSLH  &none
&none  &none  &none           &none           &kp SPACE  &kp LEFT_SHIFT    &none  &kp RIGHT_CONTROL  &to 1  &none            &none           &none
            >;

            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&none   &none      &none      &none     &none     &none             &none   &none          &none    &none     &none    &none    &none
&trans  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5            &none   &kp F6         &kp F7   &kp F8    &kp F9   &kp F10  &none
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5            &none   &kp N6         &kp N7   &kp N8    &kp N9   &kp N0   &none
&trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBKT  &kp RBKT          &trans  &trans         &kp SQT  &kp BSLH  &kp F11  &kp F12  &none
&none   &trans     &trans     &trans    &to 0     &kp LEFT_SHIFT    &trans  &kp RIGHT_ALT  &to 2    &trans    &trans   &trans
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
