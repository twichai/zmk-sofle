#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&sk { release-after-ms = <10000>; };

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    dance_F11: dance_F11 {
        compatible = "zmk,behavior-tap-dance";
        label = "DANCE_F11";
        #binding-cells = <0>;
        tapping-term-ms = <1000>;
        bindings = <&kp F1>, <&kp F11>;
    };

    dance_F12: dance_F12 {
        compatible = "zmk,behavior-tap-dance";
        label = "DANCE_F12";
        #binding-cells = <0>;
        tapping-term-ms = <1000>;
        bindings = <&kp F2>, <&kp F12>;
    };

    combos {
        compatible = "zmk,combos";

        back_space {
            bindings = <&kp BACKSPACE>;
            key-positions = <21 22>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <48 49>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <41 40>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <16 17>;
        };

        system_key {
            bindings = <&mo 3>;
            key-positions = <34 35 36 37>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <41 42>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <42 43>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&none  &none  &none  &none  &none      &none               &none  &none  &none            &none      &none    &none     &none
&none  &kp Q  &kp W  &kp E  &kp R      &kp T               &none  &kp Y  &kp U            &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D  &kp F      &kp G               &none  &kp H  &kp J            &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C  &kp V      &kp B               &none  &kp N  &kp M            &kp COMMA  &kp DOT  &kp FSLH  &none
&none  &none  &none  &none  &kp SPACE  &kp LEFT_CONTROL    &none  &to 1  &kp RIGHT_SHIFT  &none      &none    &none
            >;

            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&none  &none            &none      &none             &none       &none                 &none  &none      &none            &none         &none                 &none                  &none
&none  &kp N1           &kp N2     &kp N3            &kp N4      &kp N5                &none  &kp N6     &kp N7           &kp N8        &kp N9                &kp N0                 &none
&none  &kp EXCLAMATION  &kp AT     &kp HASH          &kp DOLLAR  &kp PERCENT           &none  &kp LCTRL  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &kp EQUAL        &kp MINUS  &kp LEFT_BRACKET  &kp SQT     &kp RBKT              &none  &to 3      &none            &trans        &trans                &kp BACKSLASH          &none
&none  &none            &none      &none             &to 0       &mt LEFT_ALT SPACE    &none  &to 2      &kp RIGHT_SHIFT  &none         &none                 &none
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&none  &none       &none           &none           &none            &none                     &mmv MOVE_UP     &none          &none            &none         &none      &none  &none
&none  &none       &none           &mmv MOVE_UP    &none            &none                     &mmv MOVE_DOWN   &none          &mkp LCLK        &mkp RCLK     &none      &none  &none
&none  &none       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none                     &mmv MOVE_LEFT   &kp LEFT       &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT  &none  &none
&none  &sys_reset  &none           &bootloader     &none            &none                     &mmv MOVE_RIGHT  &none          &none            &none         &none      &none  &none
&none  &none       &none           &none           &to 0            &mt LEFT_CONTROL SPACE    &mkp LCLK        &kp RIGHT_ALT  &kp RIGHT_SHIFT  &none         &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans            &trans          &trans                    &trans  &bt BT_CLR_ALL  &bt BT_DISC 0    &bt BT_DISC 1  &trans  &trans   &trans
&trans  &dance_F11    &dance_F12    &kp F3            &kp F4          &kp F5                    &trans  &kp F6          &kp F7           &kp F8         &kp F9  &kp F10  &trans
&trans  &sk LEFT_ALT  &sk LEFT_WIN  &sk LEFT_CONTROL  &sk LEFT_SHIFT  &trans                    &trans  &trans          &trans           &trans         &trans  &trans   &trans
&trans  &trans        &trans        &trans            &trans          &trans                    &trans  &trans          &trans           &trans         &trans  &trans   &trans
&trans  &trans        &trans        &trans            &to 0           &mt LEFT_CONTROL SPACE    &trans  &kp RIGHT_ALT   &kp RIGHT_SHIFT  &trans         &trans  &trans
            >;
        };
    };
};
